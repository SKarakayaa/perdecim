@model Entities.Concrete.Product
@{
    ViewData["Title"] = "Ürün";
    string baseUrl = ViewBag.BaseUrl;
}

<div class="content">
    <!--single-->
    <div class="single-wl3">
        <div class="container">
            <div class="single-grids">
                <div class="col-md-9 single-grid">
                    <div clas="single-top">
                        <div class="single-left">
                            <div class="flexslider">

                                <ul class="slides">
                                    @foreach (var image in Model.ProductImages)
                                    {
                                        <li data-thumb="@baseUrl/images/@image.ImageName">
                                            <div class="thumb-image"> <img src="@baseUrl/images/@image.ImageName" data-imagezoom="true"
                                                class="img-responsive"> </div>
                                        </li>    
                                    }
                                </ul>

                            </div>
                        </div>
                        <div class="single-right simpleCart_shelfItem">
                            <h4>@Model.Name</h4>
                            <div class="block">
                                <div class="starbox small ghosting"> </div>
                            </div>
                            <p class="price item_price">
                                @if(Model.DiscountRate != 0)
                                {
                                    <del>@Model.Price ₺</del>
                                    @(Model.Price - (Model.Price * (Convert.ToDecimal(Model.DiscountRate)/100))) <span>₺</span>
                                }
                                else
                                {
                                    @Model.Price <span>₺</span>
                                }
                            </p>
                            <div class="description">
                                <p><span>Açıklama : </span> @Model.Description</p>
                            </div>
                            @if(Model.ProductDemands.Count != 0)
                            {
                                foreach (var productDemands in Model.ProductDemands)
                                {
                                    <div class="row">
                                        <div class="col-md-12">@productDemands.DemandType.Name<span style="color:red">*</span></div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <select class="form-control" id="@productDemands.DemandType.Name.ToLower().Replace(" ","_")">
                                                <option value="">Seçiniz...</option>
                                                @foreach (var demand in productDemands.DemandType.Demands)
                                                {
                                                    <option value="@demand.Id">
                                                        @demand.Name
                                                        @if(demand.Price != 0)
                                                        {
                                                            <span>(+@demand.Price ₺)</span>
                                                        }
                                                    </option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <br />
                                }
                            
                            }
                            
                            <div class="color-quality">
                                <h6>Adet :</h6>
                                <div class="quantity">
                                    <div class="quantity-select">
                                        <div class="entry value-minus1">&nbsp;</div>
                                        <div class="entry value1"><span>1</span></div>
                                        <div class="entry value-plus1 active">&nbsp;</div>
                                    </div>
                                </div>
                            </div>
                            <div class="women">
                                <span class="size">@Model.Category.Name</span>
                                <a href="#" data-text="Add To Cart" class="my-cart-b item_add">Sepete Ekle</a>
                            </div>
                            <div class="social-icon">
                                <a href="#"><i class="icon"></i></a>
                                <a href="#"><i class="icon1"></i></a>
                                <a href="#"><i class="icon2"></i></a>
                                <a href="#"><i class="icon3"></i></a>
                            </div>
                        </div>
                        <div class="clearfix"> </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
<script>
    jQuery(function () {
        jQuery('.starbox').each(function () {
            var starbox = jQuery(this);
            starbox.starbox({
                average: starbox.attr('data-start-value'),
                changeable: starbox.hasClass('unchangeable') ? false : starbox.hasClass('clickonce') ? 'once' : true,
                ghosting: starbox.hasClass('ghosting'),
                autoUpdateAverage: starbox.hasClass('autoupdate'),
                buttons: starbox.hasClass('smooth') ? false : starbox.attr('data-button-count') || 5,
                stars: starbox.attr('data-star-count') || 5
            }).bind('starbox-value-changed', function (event, value) {
                if (starbox.hasClass('random')) {
                    var val = Math.random();
                    starbox.next().text(' ' + val);
                    return val;
                }
            })
        });
    });
     $('.value-plus1').on('click', function () {
                                        var divUpd = $(this).parent().find('.value1'), newVal = parseInt(divUpd.text(), 10) + 1;
                                        divUpd.text(newVal);
                                    });

                                    $('.value-minus1').on('click', function () {
                                        var divUpd = $(this).parent().find('.value1'), newVal = parseInt(divUpd.text(), 10) - 1;
                                        if (newVal >= 1) divUpd.text(newVal);
                                    });
    $(document).ready(function () {
        $("#owl-demo").owlCarousel({
            items: 1,
            lazyLoad: true,
            autoPlay: true,
            navigation: false,
            navigationText: false,
            pagination: true,
        });
         $('.flexslider').flexslider({
            animation: "slide",
            controlNav: "thumbnails"
        });
    });
</script>
}